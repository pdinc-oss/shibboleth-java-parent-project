#!/bin/bash

#
# This script performs the operations required to rename a repository's
# HEAD branch from "master" to "main".
#
# See: https://issues.shibboleth.net/jira/browse/GEN-264
#
# It should only be run by a Gitolite administrator.
#

#
# Exit on a failed command.
#
set -e

#
# Figure out name of repository.
#
REPO=$(basename -- `pwd`)

#
# We must be in a repository.
#
if [ ! -d .git ]; then
  echo "Not in a git repository!"
  exit 1
fi

#
# We must have a "master" branch to rename.
#
if ! git show-ref --quiet refs/heads/master ; then
  echo "master branch does not exist; repository already converted?"
  exit 1
fi

#
# We must not already have a "main" branch or rename will fail.
#
if git show-ref --quiet refs/heads/main ; then
  echo "main branch already exists; repository already converted?"
  exit 1;
fi

#
# The actual migration starts here.
#

echo "Renaming local master to main..."
git branch -m master main

echo "Pushing new main branch..."
git push -u origin main

echo "Setting HEAD on Gitolite server..."
ssh git@git.shibboleth.net symbolic-ref ${REPO} HEAD refs/heads/main

echo "Deleting remote master branch..."
git push origin --delete master

echo "Pruning remote refs..."
git fetch --prune origin

echo "Setting remote HEAD for origin remote..."
git remote set-head origin -a

#
# End.
#
